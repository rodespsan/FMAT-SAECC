-- MySQL Script generated by MySQL Workbench
-- 11/05/15 11:33:37
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema saecc
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `school`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `school` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(175) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


INSERT INTO `school` (`id`, `name`) VALUES
(3, 'Facultad de Ingeniería'),
(2, 'Facultad de Ingeniería Química'),
(1, 'Facultad de Matemáticas');

-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(50) NOT NULL,
  `name` VARCHAR(175) NOT NULL,
  `password_hash` VARCHAR(175) NOT NULL,
  `auth_key` VARCHAR(128) NOT NULL,
  `access_token` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `access_token_UNIQUE` (`access_token` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `status` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `status` VARCHAR(45) NOT NULL COMMENT 'Indica el estado en el que se encuentra el equipo que puede ser: almacenado, operativo, refacciones, descompuesto... ',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `status_UNIQUE` (`status` ASC))
ENGINE = InnoDB;


INSERT INTO `status` (`id`, `status`) VALUES
(1, 'Activo'),
(7, 'Asignado'),
(2, 'Baja'),
(4, 'En Reparación'),
(5, 'Garantía'),
(8, 'Prestado'),
(6, 'Refacciones'),
(3, 'Resguardado');

-- -----------------------------------------------------
-- Table `room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `room` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `available` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


INSERT INTO `room` (`id`, `name`, `available`) VALUES
(1, 'CC6', 1),
(2, 'CC1', 0),
(3, 'CC3', 0),
(4, 'CC4', 0),
(5, 'CC5', 0),
(6, 'CC7', 0),
(7, 'CC8', 0),
(8, 'ASI', 0),
(9, 'Bodega', 0),
(10, 'CC9', 0),
(11, 'S. J. A', 0),
(12, 'S. J. Dirección', 0),
(13, 'S. J. E', 0),
(14, 'D5', 0),
(15, 'D7', 0),
(16, 'D8', 0),
(17, 'LMEC', 0),
(18, 'Recepción CC', 0),
(19, 'Edif. A', 0),
(20, 'Edif. E P. A.', 0),
(21, 'Edif. E P. B.', 0),
(22, 'Dirección', 0),
(23, 'LICOVIR', 0),
(24, 'C1', 0),
(25, 'C2', 0),
(26, 'C3', 0),
(27, 'C4', 0),
(28, 'C5', 0),
(29, 'C6', 0),
(30, 'C7', 0),
(31, 'C8', 0),
(32, 'C9', 0),
(33, 'C10', 0),
(34, 'D1', 0),
(35, 'D2', 0),
(36, 'D3', 0),
(37, 'D4', 0),
(38, 'D6', 0),
(39, 'F2', 0),
(40, 'H1', 0),
(41, 'H2', 0),
(42, 'H3', 0),
(43, 'H4', 0),
(44, 'H5', 0),
(45, 'H6', 0),
(46, 'H7', 0),
(47, 'H8', 0);

-- -----------------------------------------------------
-- Table `equipment_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipment_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


INSERT INTO `equipment_type` (`id`, `name`) VALUES
(5, 'Bocina'),
(6, 'Disco Duro'),
(11, 'Duplicador de Video'),
(7, 'Impresora'),
(3, 'Laptop'),
(9, 'Mesa'),
(2, 'Monitor'),
(8, 'Pantalla'),
(1, 'PC'),
(10, 'Proyector de Acetatos'),
(13, 'Silla'),
(12, 'UPS'),
(4, 'Videoproyector');

-- -----------------------------------------------------
-- Table `equipment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `equipment` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `inventory` VARCHAR(30) NOT NULL,
  `description` VARCHAR(175) NOT NULL,
  `serial_number` VARCHAR(175) NOT NULL,
  `status_id` INT UNSIGNED NOT NULL,
  `room_id` INT UNSIGNED NOT NULL,
  `location` VARCHAR(45) NOT NULL COMMENT 'Registra la posición que se le asigna a un equipo en una sala o el nombre de una persona',
  `available` TINYINT(1) NOT NULL DEFAULT 1 COMMENT 'Este campo registra si un equipo va a estar disponible en una sala para asignarlo a un cliente',
  `type_id` INT UNSIGNED NOT NULL,
  UNIQUE INDEX `computer_inventory_id_UNIQUE` (`inventory` ASC),
  PRIMARY KEY (`id`),
  INDEX `fk_computer_status1_idx` (`status_id` ASC),
  INDEX `fk_computer_room1_idx` (`room_id` ASC),
  INDEX `fk_equipment_equipment_type1_idx` (`type_id` ASC),
  CONSTRAINT `fk_computer_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_computer_room1`
    FOREIGN KEY (`room_id`)
    REFERENCES `room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_equipment_equipment_type1`
    FOREIGN KEY (`type_id`)
    REFERENCES `equipment_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `log_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `log_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL COMMENT 'indica el tipo de operación como: altas, bajas o cambios.',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


INSERT INTO `log_type` (`id`, `type`) VALUES
(1, 'Alta'),
(2, 'Baja'),
(3, 'Actualización');

-- -----------------------------------------------------
-- Table `log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `log` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `equipment_id` INT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `status_id` INT UNSIGNED NOT NULL,
  `date` DATETIME NOT NULL,
  `room_id` INT UNSIGNED NOT NULL,
  `location` VARCHAR(45) NOT NULL,
  `log_type_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_log_equipment1_idx` (`equipment_id` ASC),
  INDEX `fk_log_status1_idx` (`status_id` ASC),
  INDEX `fk_log_user1_idx` (`user_id` ASC),
  INDEX `fk_log_log_type1_idx` (`log_type_id` ASC),
  CONSTRAINT `fk_log_equipment1`
    FOREIGN KEY (`equipment_id`)
    REFERENCES `equipment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_log_log_type1`
    FOREIGN KEY (`log_type_id`)
    REFERENCES `log_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `client_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `client_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC))
ENGINE = InnoDB;


INSERT INTO `client_type` (`id`, `type`) VALUES
(2, 'Académico'),
(3, 'Administrativo'),
(1, 'Alumno'),
(4, 'Externo');

-- -----------------------------------------------------
-- Table `area`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `area` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(175) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


INSERT INTO `area` (`id`, `name`) VALUES
(1, 'Computación'),
(2, 'Matemáticas'),
(3, 'Otra');

-- -----------------------------------------------------
-- Table `discipline`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `discipline` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `school_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(175) NOT NULL,
  `short_name` VARCHAR(20) NOT NULL,
  `area_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_discipline_area1_idx` (`area_id` ASC),
  INDEX `fk_discipline_school1_idx` (`school_id` ASC),
  CONSTRAINT `fk_discipline_area1`
    FOREIGN KEY (`area_id`)
    REFERENCES `area` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_discipline_school1`
    FOREIGN KEY (`school_id`)
    REFERENCES `school` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


INSERT INTO `discipline` (`id`, `school_id`, `name`, `short_name`, `area_id`) VALUES
(1, 1, 'Licenciatura en Matemáticas', 'LM', 2),
(2, 1, 'Licenciatura en Enseñanza de las Matemáticas', 'LEM', 2),
(3, 1, 'Licenciatura en Actuaría', 'LA', 2),
(4, 1, 'Licenciatura en Ciencias de la Computación', 'LCC', 1),
(5, 1, 'Licenciatura en Ingeniería de Software', 'LIS', 1),
(6, 1, 'Licenciatura en Ingeniería en Computación', 'LIC', 1),
(7, 3, 'Licenciatura en Ingeniería Civil', 'LI', 3),
(8, 2, 'Licenciatura en Ingeniería Química', 'LIQ', 3);

-- -----------------------------------------------------
-- Table `client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `client` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `client_id` VARCHAR(30) NOT NULL COMMENT 'Puede ser matrícula, clave de empleado o e-mail',
  `first_name` VARCHAR(175) NOT NULL,
  `last_name` VARCHAR(175) NOT NULL,
  `client_type_id` INT UNSIGNED NOT NULL,
  `discipline_id` INT UNSIGNED NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `user_UNIQUE` (`client_id` ASC),
  INDEX `fk_client_user_type1_idx` (`client_type_id` ASC),
  INDEX `fk_client_discipline1_idx` (`discipline_id` ASC),
  CONSTRAINT `fk_client_user_type1`
    FOREIGN KEY (`client_type_id`)
    REFERENCES `client_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_client_discipline1`
    FOREIGN KEY (`discipline_id`)
    REFERENCES `discipline` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `incident`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `incident` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `date` DATETIME NOT NULL,
  `equipment_id` INT UNSIGNED NULL,
  `room_id` INT UNSIGNED NOT NULL,
  `description` TEXT NOT NULL,
  `solved` TINYINT(1) NOT NULL DEFAULT 0,
  `date_solved` DATETIME NULL,
  `client_id` INT UNSIGNED NULL,
  `user_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_incident_equipment1_idx` (`equipment_id` ASC),
  INDEX `fk_incident_room1_idx` (`room_id` ASC),
  INDEX `fk_incident_client1_idx` (`client_id` ASC),
  INDEX `fk_incident_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_incident_equipment1`
    FOREIGN KEY (`equipment_id`)
    REFERENCES `equipment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_incident_room1`
    FOREIGN KEY (`room_id`)
    REFERENCES `room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_incident_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `client` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_incident_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `assignation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `assignation` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `client_id` INT UNSIGNED NOT NULL,
  `equipment_id` INT UNSIGNED NOT NULL,
  `location` VARCHAR(45) NOT NULL,
  `room_id` INT UNSIGNED NOT NULL,
  `start_date` DATETIME NOT NULL,
  `end_date` DATETIME NOT NULL,
  `duration` INT UNSIGNED NOT NULL COMMENT 'el tiempo se guardará en segundos y se convertirá a horas según la vista de usuario',
  `purpose` VARCHAR(170) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_assignation_client1_idx` (`client_id` ASC),
  INDEX `fk_assignation_equipment1_idx` (`equipment_id` ASC),
  INDEX `fk_assignation_room1_idx` (`room_id` ASC),
  CONSTRAINT `fk_assignation_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `client` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_assignation_equipment1`
    FOREIGN KEY (`equipment_id`)
    REFERENCES `equipment` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_assignation_room1`
    FOREIGN KEY (`room_id`)
    REFERENCES `room` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
